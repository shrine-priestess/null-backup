# Configuration for Eddy USB probe. Adapted for SV08 mainline from
# https://github.com/bigtreetech/Eddy/blob/master/sample-bigtreetech-eddy-zoffbeta.cfg
# (i.e., using Eddy for both bed mesh and probing AND using the beta z-offset support).
# Follow the guide at https://github.com/bigtreetech/Eddy, but skipping everything
# about configuration except setting the serial path below. (In other words, do only
# mounting, firmware compilation and calibration.) You can find a mount that allows you
# to fit the Eddy under the regular SV08 shroud (instead of the old probe, in the same place)
# at https://www.printables.com/model/968900-sovol-sv08-btt-eddy-mount.
# If you are connecting the probe in some other way, adjust x_offset and y_offset below
# (see the BTT guide for information).
#
# Please make sure you add 'METHOD=rapid_scan' to your BED_MESH_CALIBRATE (e.g. in the START_PRINT macro)
#
# TODO: It would be nice to use the physical probe to automate the setup completely,
# but that probably requires a fair bit of scripting.

[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504450611044531C-if00  # Change this to your own path
restart_method: command

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5 # Set to a non-zero value, this does not work exactly the same as the z_offset for other probes, read: https://www.klipper3d.org/Config_Reference.html#probe_eddy_current
i2c_mcu: eddy
i2c_bus: i2c0f
x_offset: -16 # These offsets are for the above linked Eddy mount on the stock toolhead.
y_offset: 11.5

[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2
calibration_position: 319,176,5 ; This sets the position for temperature drift calibration over the center right heatbed screw, for a more accurate reading during calibration.

[bed_mesh]
speed: 120 #500
horizontal_move_z: 2.5
mesh_min: 15,18 # These min/max points are with the above linked Eddy mount on the stock toolhead.
mesh_max: 335,335
probe_count: 15,15 # 25,25 # Set to a lower 15,15 default as it appears a too high probe_count (too dense mesh) is bad with rapid_scan, see: https://www.klipper3d.org/Bed_Mesh.html#rapid-continuous-scanning
algorithm: bicubic
bicubic_tension: 0.5
split_delta_z: 0.0125 # see: https://www.klipper3d.org/Bed_Mesh.html#move-splitting
mesh_pps: 3,3
adaptive_margin: 5
fade_start: 1
fade_end: 10
fade_target: 0
#scan_overshoot: 5  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

# COMMENTED FOR REFERENCE, WE NOW USE HOMING OVERRIDE BELOW
#[safe_z_home]
#home_xy_position: 172, 172
#z_hop: 10
#z_hop_speed: 25
#speed: 200

# THIS HOMING OVERRIDE ALWAYS GOES BACK TO CENTER FIRST BEFORE HOMING THE OTHER AXIS
# THIS ALREADY INCLUDES THE EDDY HOMING OVERRIDES/CHANGES
[homing_override]
gcode:
  # Move 5 up, just in case (this is our safety zhop, this needs 'set_position_z: 0' below)
  G91 ; set relative positioning
  G0 Z5 F1000 ; 5 up zhop
  {% if not rawparams or 'Y' in rawparams %}
    {action_respond_info('Homing Y')}
    G28 Y
    G90 ; set absolute positioning
    G0 Y177.5 F6000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
  {% if not rawparams or 'X' in rawparams %}
    {action_respond_info('Homing X')}
    G28 X
    G90 ; set absolute positioning
    G0 X177.5 F6000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
  {% if not rawparams or 'Z' in rawparams %}
    {action_respond_info('Homing Z')}
    G90 ; set absolute positioning
    G0 X177.5 Y177.5 F6000 ; return to center, please add your offsets manually if you want to
    G28 Z
    G0 Z10 F1000 ; move to z10 before probe
    PROBE # Eddy needs a manual PROBE before calling the 'SET_Z_FROM_PROBE'
    SET_Z_FROM_PROBE
    G0 Z5 F1000 ; move to z5 to finish
    M400 ; Wait for move to finish
  {% endif %}
  G90 ; set absolute positioning
axes: xyz
set_position_z: 0 # This forces the z position to be at 0 when we start homing, so we can move the Z up before homing.

###############################Macros and related################################
# These macro's include the so called beta z-offset control from BTT so you can change/babystep the z-offset (from e.g. the mainsail interface).
# The z-offset changes are saved in your 'saved_variables.cfg' as 'nvm_offset'.

# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[delayed_gcode RESTORE_PROBE_OFFSET]
initial_duration: 1.
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
  {% endif %}

# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}

# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }

# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %} 
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }

# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}

# This moves the nozzle above the center right heatbed screw so we have a fixed place for our temperature drift calibration (and I don't have to remember the coordinates)
[gcode_macro PROBE_EDDY_MOVE_TO_SCREW]
gcode:
  BED_MESH_CLEAR
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G90
  G1 X319 Y176 Z5 F6000


#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050156:3250685.196,0.090000:3249941.051,0.129844:3249250.619,
#*# 	0.170156:3248522.936,0.210000:3247788.241,0.249844:3247109.191,
#*# 	0.290156:3246399.174,0.330000:3245706.139,0.369844:3244974.536,
#*# 	0.410156:3244301.483,0.450000:3243595.142,0.489844:3242926.279,
#*# 	0.530156:3242272.269,0.570000:3241585.279,0.609844:3240921.314,
#*# 	0.650156:3240244.017,0.690000:3239584.157,0.729844:3238972.996,
#*# 	0.770156:3238319.228,0.810000:3237690.799,0.849844:3237066.826,
#*# 	0.890156:3236479.136,0.930000:3235847.406,0.969844:3235264.932,
#*# 	1.010156:3234658.305,1.050000:3234062.154,1.089844:3233519.645,
#*# 	1.130156:3232940.370,1.170000:3232357.483,1.209844:3231821.500,
#*# 	1.250156:3231302.110,1.290000:3230750.308,1.329844:3230252.519,
#*# 	1.370156:3229706.917,1.410000:3229208.432,1.449844:3228706.303,
#*# 	1.490156:3228200.246,1.530000:3227701.098,1.569844:3227243.055,
#*# 	1.610156:3226755.429,1.650000:3226280.052,1.689844:3225811.461,
#*# 	1.730156:3225363.647,1.770000:3224898.444,1.809844:3224482.105,
#*# 	1.850156:3224051.349,1.890000:3223617.576,1.929844:3223193.972,
#*# 	1.970156:3222805.412,2.010000:3222368.853,2.049844:3221997.508,
#*# 	2.090156:3221585.873,2.130000:3221184.164,2.169844:3220834.250,
#*# 	2.210156:3220444.272,2.250000:3220052.757,2.289844:3219706.101,
#*# 	2.330156:3219375.140,2.370000:3219008.496,2.409844:3218708.206,
#*# 	2.450156:3218347.045,2.490000:3217994.106,2.529844:3217670.063,
#*# 	2.570156:3217352.725,2.610000:3217041.605,2.649844:3216723.922,
#*# 	2.690156:3216432.390,2.730000:3216117.702,2.769844:3215831.156,
#*# 	2.810156:3215539.869,2.850000:3215240.294,2.889844:3214973.727,
#*# 	2.930156:3214665.277,2.970000:3214409.262,3.009844:3214130.480,
#*# 	3.050156:3213873.780,3.090000:3213595.489,3.129844:3213349.812,
#*# 	3.170156:3213107.661,3.210000:3212862.302,3.249844:3212586.213,
#*# 	3.290156:3212371.150,3.330000:3212117.009,3.369844:3211895.833,
#*# 	3.410156:3211669.988,3.450000:3211439.978,3.489844:3211235.631,
#*# 	3.530156:3211022.667,3.570000:3210778.291,3.609844:3210559.087,
#*# 	3.650156:3210338.918,3.690000:3210141.201,3.729844:3209949.068,
#*# 	3.770156:3209738.420,3.810000:3209529.358,3.849844:3209337.085,
#*# 	3.890156:3209168.326,3.930000:3208959.073,3.969844:3208777.195,
#*# 	4.010156:3208580.067,4.050000:3208402.460
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 39.666976
#*# drift_calibration =
#*# 	3422588.910505, -7370.919774, 77.353481
#*# 	3376008.372459, -5743.764037, 60.267972
#*# 	3339245.596544, -4505.993060, 47.336474
#*# 	3305201.453554, -3325.535265, 34.871048
#*# 	3280174.606741, -2487.499283, 26.073755
#*# 	3255808.038297, -1625.574791, 16.880326
#*# 	3243539.977372, -1259.412646, 13.096748
#*# 	3232450.654165, -907.306492, 9.342748
#*# 	3220273.532555, -491.148116, 4.948287
#*# drift_calibration_min_temp = 40.5275515074516